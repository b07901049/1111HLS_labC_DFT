-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    real_sample_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    real_sample_ce0 : OUT STD_LOGIC;
    real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    imag_sample_ce0 : OUT STD_LOGIC;
    imag_sample_we0 : OUT STD_LOGIC;
    imag_sample_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    imag_sample_ce1 : OUT STD_LOGIC;
    imag_sample_we1 : OUT STD_LOGIC;
    imag_sample_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_op_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    real_op_ce0 : OUT STD_LOGIC;
    real_op_we0 : OUT STD_LOGIC;
    real_op_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_op_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_op_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    imag_op_ce0 : OUT STD_LOGIC;
    imag_op_we0 : OUT STD_LOGIC;
    imag_op_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_op_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dft is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dft_dft,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.519250,HLS_SYN_LAT=10503169,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1204,HLS_SYN_LUT=1230,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln20_fu_122_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln20_reg_149 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln17_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal real_op_load_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal imag_op_load_reg_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln21_fu_131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln21_reg_175 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal bitcast_ln22_fu_135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln22_reg_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_idle : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_ready : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_ce0 : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_we0 : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_ce0 : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_we0 : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_ce0 : STD_LOGIC;
    signal grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln17_fu_116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_48 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln17_fu_110_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dft_dft_Pipeline_VITIS_LOOP_19_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bitcast_ln22 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln21 : IN STD_LOGIC_VECTOR (31 downto 0);
        imag_op_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        imag_op_ce0 : OUT STD_LOGIC;
        imag_op_we0 : OUT STD_LOGIC;
        imag_op_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        zext_ln17 : IN STD_LOGIC_VECTOR (9 downto 0);
        real_op_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        real_op_ce0 : OUT STD_LOGIC;
        real_op_we0 : OUT STD_LOGIC;
        real_op_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (9 downto 0);
        real_sample_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        real_sample_ce0 : OUT STD_LOGIC;
        real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78 : component dft_dft_Pipeline_VITIS_LOOP_19_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start,
        ap_done => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done,
        ap_idle => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_idle,
        ap_ready => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_ready,
        bitcast_ln22 => bitcast_ln22_reg_180,
        bitcast_ln21 => bitcast_ln21_reg_175,
        imag_op_address0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_address0,
        imag_op_ce0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_ce0,
        imag_op_we0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_we0,
        imag_op_d0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_d0,
        zext_ln17 => trunc_ln20_reg_149,
        real_op_address0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_address0,
        real_op_ce0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_ce0,
        real_op_we0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_we0,
        real_op_d0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_d0,
        trunc_ln => trunc_ln20_reg_149,
        real_sample_address0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_address0,
        real_sample_ce0 => grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_ce0,
        real_sample_q0 => real_sample_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_ready = ap_const_logic_1)) then 
                    grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    k_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_fu_48 <= ap_const_lv11_0;
            elsif (((icmp_ln17_fu_104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                k_fu_48 <= add_ln17_fu_110_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bitcast_ln21_reg_175 <= bitcast_ln21_fu_131_p1;
                bitcast_ln22_reg_180 <= bitcast_ln22_fu_135_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                imag_op_load_reg_170 <= imag_op_q0;
                real_op_load_reg_165 <= real_op_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln20_reg_149 <= trunc_ln20_fu_122_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln17_fu_104_p2, grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln17_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln17_fu_110_p2 <= std_logic_vector(unsigned(k_fu_48) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done)
    begin
        if ((grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln17_fu_104_p2)
    begin
        if (((icmp_ln17_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln17_fu_104_p2)
    begin
        if (((icmp_ln17_fu_104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln21_fu_131_p1 <= real_op_load_reg_165;
    bitcast_ln22_fu_135_p1 <= imag_op_load_reg_170;
    grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_ap_start_reg;
    icmp_ln17_fu_104_p2 <= "1" when (k_fu_48 = ap_const_lv11_400) else "0";

    imag_op_address0_assign_proc : process(ap_CS_fsm_state2, grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_address0, ap_CS_fsm_state5, zext_ln17_fu_116_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            imag_op_address0 <= zext_ln17_fu_116_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            imag_op_address0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_address0;
        else 
            imag_op_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    imag_op_ce0_assign_proc : process(ap_CS_fsm_state2, grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            imag_op_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            imag_op_ce0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_ce0;
        else 
            imag_op_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    imag_op_d0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_d0;

    imag_op_we0_assign_proc : process(grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            imag_op_we0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_imag_op_we0;
        else 
            imag_op_we0 <= ap_const_logic_0;
        end if; 
    end process;

    imag_sample_address0 <= ap_const_lv10_0;
    imag_sample_address1 <= ap_const_lv10_0;
    imag_sample_ce0 <= ap_const_logic_0;
    imag_sample_ce1 <= ap_const_logic_0;
    imag_sample_d0 <= ap_const_lv32_0;
    imag_sample_d1 <= ap_const_lv32_0;
    imag_sample_we0 <= ap_const_logic_0;
    imag_sample_we1 <= ap_const_logic_0;

    real_op_address0_assign_proc : process(ap_CS_fsm_state2, grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_address0, ap_CS_fsm_state5, zext_ln17_fu_116_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            real_op_address0 <= zext_ln17_fu_116_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            real_op_address0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_address0;
        else 
            real_op_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    real_op_ce0_assign_proc : process(ap_CS_fsm_state2, grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            real_op_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            real_op_ce0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_ce0;
        else 
            real_op_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_op_d0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_d0;

    real_op_we0_assign_proc : process(grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            real_op_we0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_op_we0;
        else 
            real_op_we0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_address0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_address0;
    real_sample_ce0 <= grp_dft_Pipeline_VITIS_LOOP_19_2_fu_78_real_sample_ce0;
    trunc_ln20_fu_122_p1 <= k_fu_48(10 - 1 downto 0);
    zext_ln17_fu_116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_48),64));
end behav;
